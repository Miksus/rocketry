[tox]
envlist = py36,py38,py310
# isolated_build = True
# requires = [-rrequirements.txt]

[testenv]
deps = 
    -rrequirements.txt
    pytest
# change pytest tempdir and add posargs from command line
commands = pytest --pyargs rocketry -r chars

[testenv:coverage]
basepython = python3.8
deps = 
    -rrequirements.txt
    pytest-cov
    pytest
# change pytest tempdir and add posargs from command line
commands = pytest --cov=rocketry --cov-report=html rocketry/test
# commands = pytest --cov {envsitepackagesdir}/rocketry --cov-report=html --cov-config=.coveragerc

[testenv:wheeltest]
description = Build and install the wheel and run Pytests in it.
deps = 
    pytest
skip_install = True
commands =
    # /bin/rm -rf build
    python setup.py bdist_wheel
    pip install --upgrade  --find-links={toxinidir}/dist rocketry
    pytest --pyargs rocketry -r chars

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python3.8
deps = 
    -r{toxinidir}/requirements/docs.txt
    sphinx >= 1.7.5
commands = sphinx-build docs "{toxinidir}/docs/_build/html" --color -W -bhtml {posargs}
           sphinx-build -b doctest docs "{toxinidir}/docs/_build/html"
           python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:build]
description = build the package.
skip_install = true
# install_command = pip install --upgrade build
commands = python setup.py bdist_wheel sdist

[testenv:release]
description = build and release the package.
skip_install = true
deps = 
    twine
# install_command = pip install --upgrade build
commands = python setup.py bdist_wheel sdist
           twine upload dist/*

[testenv:release-test]
description = build and release the package.
skip_install = true
deps = 
    twine
# install_command = pip install --upgrade build
commands = python setup.py bdist_wheel sdist
           twine upload -r testpypi dist/*
